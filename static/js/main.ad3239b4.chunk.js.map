{"version":3,"sources":["ModalConfirm.js","ModalComponent.js","App.js","reportWebVitals.js","index.js"],"names":["unstable_createMuiStrictModeTheme","ModalComponent","this","props","modalOpen","modalTitle","modalContentText","addModalChildren","modalBottomType","bottomFirstButtonName","onBottomFirstButtonClick","bottomSecondButtonName","onBottomSecondButtonClick","autoClose","bottomThirdButtonName","onBottomThirdButtonClick","isAutoClose","className","onClick","children","modalBtm_oneBtn","modalBtm_twoBtn","Component","App","onAutoClose","setState","onFirstButtonClick","console","log","onModalOpen","modalType","changeModal","state","modalProps","onDropFile","file","e","type","reader","FileReader","scope","onload","style","width","height","src","result","alt","alert","readAsDataURL","alertBtnTest","twoBtnTest","change","buttonOnClick","changeTest","loginTest","loginForm","onChange","target","value","border","color","padding","verticalAlign","textAlign","display","FileDrop","onDrop","files","event","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad3239b4.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { unstable_createMuiStrictModeTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = unstable_createMuiStrictModeTheme();\r\n\r\nconst ModalConfirm\r\n    = ({ modalOpen = false,\r\n           modalType,\r\n           modalTitle = '',\r\n           modalContentText = '',\r\n           addModalChildren,\r\n           modalBottomType = '',\r\n           bottomFirstButtonName = '',\r\n           onBottomFirstButtonClick = null,\r\n           bottomSecondButtonName = '',\r\n           onBottomSecondButtonClick = null,\r\n           bottomThirdButtonName = '',\r\n           onBottomThirdButtonClick = null,\r\n           autoClose\r\n    }) => {\r\n\r\n    return (\r\n        <ThemeProvider theme = {theme}>\r\n            <Dialog\r\n                open={modalOpen}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{modalTitle}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {modalContentText}\r\n                        {addModalChildren}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {\r\n                        {\r\n                            /*alert_oneBtn:<button onClick={onBottomFirstButtonClick}>{bottomFirstButtonName}</button>,*/\r\n                            modalBtm_oneBtn : <button onClick={function (){onBottomFirstButtonClick(); autoClose();}}>{bottomFirstButtonName}</button>,\r\n                            modalBtm_twoBtn:<div><button onClick={onBottomFirstButtonClick}>{bottomFirstButtonName}</button><button onClick={onBottomSecondButtonClick}>{bottomSecondButtonName}</button></div>,\r\n                        }[modalBottomType]\r\n\r\n                    }\r\n                </DialogActions>\r\n            </Dialog>\r\n        </ThemeProvider>\r\n\r\n    );\r\n}\r\nexport default ModalConfirm;\r\n","import React, {Component} from \"react\";\r\nimport './ModalComponent.css';\r\n\r\nclass ModalComponent extends Component{\r\n\r\n    render() {\r\n        const { modalOpen,\r\n                modalTitle,\r\n                modalContentText,\r\n                addModalChildren,\r\n                modalBottomType,\r\n                bottomFirstButtonName ,\r\n                onBottomFirstButtonClick,\r\n                bottomSecondButtonName,\r\n                onBottomSecondButtonClick,\r\n                bottomThirdButtonName,\r\n                onBottomThirdButtonClick,\r\n                autoClose,\r\n                isAutoClose\r\n                 } = this.props;\r\n\r\n        return(\r\n            <div className={ modalOpen ? 'openModal modal': 'modal' }>\r\n                { modalOpen ? (\r\n                    <section>\r\n                        <header>\r\n                            { modalTitle }\r\n                            <button className=\"close\" onClick={autoClose}> &times; </button>\r\n                        </header>\r\n                        <main>\r\n                            {modalContentText? <div>{modalContentText}</div> : ''}\r\n                            {this.props.children}\r\n                            {addModalChildren}\r\n                        </main>\r\n                        <footer>\r\n                            {\r\n                                {\r\n                                    modalBtm_oneBtn :\r\n                                        <button onClick={function ()\r\n                                            {\r\n                                                onBottomFirstButtonClick();\r\n                                                if(isAutoClose){\r\n                                                    autoClose();\r\n                                                }\r\n                                            }}>\r\n                                            {bottomFirstButtonName}\r\n                                        </button>,\r\n\r\n                                    modalBtm_twoBtn:\r\n                                        <div>\r\n                                            <button onClick={function ()\r\n                                            {\r\n                                                onBottomFirstButtonClick();\r\n                                                if(isAutoClose){\r\n                                                    autoClose();\r\n                                                }\r\n                                            }}>\r\n                                                {bottomFirstButtonName}\r\n                                            </button>\r\n                                            <button onClick={function ()\r\n                                            {\r\n                                                onBottomSecondButtonClick();\r\n                                                if(isAutoClose){\r\n                                                    autoClose();\r\n                                                }\r\n                                            }}>\r\n                                                {bottomSecondButtonName}\r\n                                            </button>\r\n                                        </div>,\r\n                                }[modalBottomType]\r\n\r\n                            }\r\n                        </footer>\r\n                    </section>\r\n                ) : null }\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default ModalComponent;","import React, {Component} from 'react';\nimport ModalConfirm from \"./ModalConfirm\"; // opensource(material-ui)\nimport { FileDrop } from 'react-file-drop';\nimport ModalComponent from \"./ModalComponent\"; // opensource 활용하여 별도로 만든거\nimport ReactDOM from 'react-dom';\n\n//https://darrengwon.tistory.com/560\n\nexport default class App extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalOpen : false,\n            modalProps : {\n                modalType : \"alert_twoBtn\",\n                modalTitle : \"alert_oneBtn\",\n                modalContentText : \"타이틀\",\n                addModalChildren : null,\n                modalBottomType : \"one Button Modal\",\n                bottomFirstButtonName : \"OK\",\n                onBottomFirstButtonClick : (this.onFirstButtonClick),\n                isAutoClose : true,\n                autoClose : (this.onAutoClose)\n            }\n        }\n\n    }\n\n    //modal 창 바깥쪽 클릭시 modal 닫기\n    //작동이 되긴 하지만 에러가 있어서 주석 처리\n/*\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside, true);\n    }\n\n    componentWillUnmount() {\n        document.addEventListener('mousedown', this.handleClickOutside, true);\n    }\n\n    handleClickOutside = event => {\n        const domNode = ReactDOM.findDOMNode(this);\n        if(event.target.className === 'openModal modal'){\n            console.log(\"false\");\n            this.setState({modalOpen : false});\n        }\n\n    }*/\n\n    onAutoClose = () => {\n        this.setState({modalOpen : false});\n    }\n\n    onFirstButtonClick = () => {\n        this.setState({modalOpen : false});\n        console.log(\"onFirstButtonClick\");\n    }\n\n    onModalOpen = (\n        modalType,\n        modalTitle = \"\",\n        modalContentText = \"\",\n        addModalChildren = null,\n        modalBottomType = \"modalBtm_oneBtn\",\n        bottomFirstButtonName = \"\",\n        onBottomFirstButtonClick = null,\n        bottomSecondButtonName = \"\",\n        onBottomSecondButtonClick = null,\n        bottomThirdButtonName = \"\",\n        onBottomThirdButtonClick = null,\n        isAutoClose = true\n    ) => {\n        let changeModal = this.state.modalProps;\n        changeModal.modalType = modalType;\n        changeModal.modalTitle = modalTitle;\n        changeModal.modalContentText = modalContentText;\n        changeModal.addModalChildren = addModalChildren;\n        changeModal.modalBottomType = modalBottomType;\n        changeModal.bottomFirstButtonName = bottomFirstButtonName;\n        changeModal.onBottomFirstButtonClick = onBottomFirstButtonClick;\n        changeModal.bottomSecondButtonName = bottomSecondButtonName;\n        changeModal.onBottomSecondButtonClick = onBottomSecondButtonClick;\n        changeModal.bottomThirdButtonName = bottomThirdButtonName;\n        changeModal.onBottomThirdButtonClick = onBottomThirdButtonClick;\n        changeModal.isAutoClose = isAutoClose;\n\n\n        this.setState({modalProps : changeModal});\n\n        this.setState({modalOpen:true});\n\n    }\n\n    onDropFile = (file, e) => {\n\n        if(file[0].type===\"image/jpeg\" || file[0].type===\"image/png\"){\n            let reader = new FileReader();\n            const scope = this;\n\n            reader.onload = function () {\n                scope.onModalOpen(\n                    \"\",\n                    \"drag & drop test\",\n                    \"1. drop file.\\r\\n2.modal open.(with file)\",\n                    (<div style={{width:\"300\", height:\"300\"}}><img src={reader.result} alt=\"aaa\" style={{width:\"300\", height:\"300\"}}/></div>),\n                    \"modalBtm_oneBtn\",\n                    \"OK\",\n                    function (){\n                        alert(\"OK\");\n                    },\n                );\n            }\n\n            reader.readAsDataURL(file[0]);\n        }else{\n            this.onModalOpen(\n                \"\",\n                \"warning\",\n                \"Please drop only image.\",\n                null,\n                \"modalBtm_oneBtn\",\n                \"OK\",\n                function (){\n                    alert(\"OK\");\n                },\n            );\n\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                <ModalComponent\n                    modalOpen={this.state.modalOpen}\n                    {...this.state.modalProps}\n                />\n\n                <div style={{border: '1px solid black', width: 600, color: 'black', padding: 20, height:300, verticalAlign:\"middle\", textAlign: \"center\", display:\"table-cell\"}}>\n                    <FileDrop\n                        /*                        onFrameDragEnter={(event) => this.onDropFile(event)}\n                                                onFrameDragLeave={(event) => console.log('onFrameDragLeave', event)}\n                                                onFrameDrop={(event) => console.log('onFrameDrop', event)}\n                                                onDragOver={(event) => console.log('onDragOver', event)}\n                                                onDragLeave={(event) => console.log('onDragLeave', event)}*/\n                        onDrop={(files, event) => this.onDropFile( files, event)}\n                    >\n                        <h1>Drop image file here!</h1>\n                        <h2>(only image)</h2>\n                    </FileDrop>\n                </div>\n\n                <br/>\n                <br/>\n                <button onClick={this.alertBtnTest}>\n                    Open alert dialog\n                </button>\n                <br/>\n                <br/>\n                <button onClick={this.twoBtnTest}>another button</button>\n                <br/>\n                <br/>\n                <button onClick={this.loginTest}>login test</button>\n\n\n            </div>\n        );\n\n\n\n\n\n    };\n\n    alertBtnTest = () => {\n        this.onModalOpen(\n            \"\",\n            \"alert test\",\n            \"this is alert test.\",\n            null,\n            \"modalBtm_oneBtn\",\n            \"confirm\",\n            function (){\n                alert(\"confirm\");\n            },\n        );\n\n\n    }\n\n    twoBtnTest = () => {\n        const change = this;\n        this.onModalOpen(\n            \"\",\n            \"two button test\",\n            \"this is two button test.\",\n            null,\n            \"modalBtm_twoBtn\",\n            \"OK\",\n            function (){\n                change.alertBtnTest();\n            },\n            \"Cancel\",\n            function (){\n                alert(\"Cancel\");\n            },\n            \"\",\n            null,\n            false,\n        );\n    }\n\n    buttonOnClick = (changeTest) =>{\n        alert(\"buttonOnClick\");\n        alert(changeTest);\n    }\n\n    loginTest = () => {\n        let changeTest = '';\n\n        const loginForm = (\n            <div>\n                <input type={\"text\"} onChange={function(e){\n                    changeTest = e.target.value;\n                }}/>\n                <button onClick={() => this.buttonOnClick(changeTest)}>check</button>\n            </div>\n        );\n\n        this.onModalOpen(\n            \"\",\n            \"login form test\",\n            \"\",\n            loginForm,\n            \"modalBtm_twoBtn\",\n            \"OK\",\n            function (){\n                alert(\"OK\");\n            },\n            \"Cancel\",\n            function (){\n                alert(\"Cancel\");\n            },\n        );\n\n\n    }\n\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}